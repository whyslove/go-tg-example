// GENERATED BY 'T'ransport 'G'enerator. DO NOT EDIT.
package transport

import (
	"context"
	"github.com/rs/zerolog"
	"test-tg/pkg/interfaces"
)

type serverMathematical struct {
	svc interfaces.Mathematical
	add MathematicalAdd
}

type MiddlewareSetMathematical interface {
	Wrap(m MiddlewareMathematical)
	WrapAdd(m MiddlewareMathematicalAdd)

	WithLog(log zerolog.Logger)
}

func newServerMathematical(svc interfaces.Mathematical) *serverMathematical {
	return &serverMathematical{
		add: svc.Add,
		svc: svc,
	}
}

func (srv *serverMathematical) Wrap(m MiddlewareMathematical) {
	srv.svc = m(srv.svc)
	srv.add = srv.svc.Add
}

func (srv *serverMathematical) Add(ctx context.Context, a int, b int) (result int, err error) {
	return srv.add(ctx, a, b)
}

func (srv *serverMathematical) WrapAdd(m MiddlewareMathematicalAdd) {
	srv.add = m(srv.add)
}

func (srv *serverMathematical) WithLog(log zerolog.Logger) {
	srv.Wrap(loggerMiddlewareMathematical(log))
}
